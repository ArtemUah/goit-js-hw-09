{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAeA,IAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,wBACpCE,EAAiBH,SAASC,cAAc,uBACxCG,EAASJ,SAASC,cAAc,yBAEtCF,EAAKM,iBAAiB,UAAU,SAAAC,G,kBAM5B,IAAIC,EAAWC,EACXC,EAAQC,EAAaC,GAAaH,EAAI,GAC1CI,YAAW,WA1Bf,IAAuBC,EAAUC,EACzBC,GADeF,EA2BHN,EA3BaO,EA2BHL,EA1BtBM,EAAgBC,KAAKC,SAAW,GAC/B,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EAEFI,EAAQ,CAAEN,WAAUC,UAGpBM,EAAO,CAAEP,WAAUC,S,KAoBhBO,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,M,OACjBS,EAAA1B,GAAS2B,OAAOC,QAAQ,qBAAoCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M,IAEnEa,OAAM,SAAAL,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,M,OAClBS,EAAA1B,GAAS2B,OAAOI,QACd,sBAAqCF,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M,IAG9Ce,QAAQ9B,EAAK+B,Q,GACfrB,E,EAlBLH,EAAMyB,iBAIN,IAHA,IAAMC,GAAiB5B,EAAO6B,MACxBvB,GAAcR,EAAW+B,MACzBtB,GAAaR,EAAe8B,MACzBC,EAAI,EAAGA,GAAKF,EAAeE,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      // Fulfill\n      resolve({ position, delay });\n    } else {\n      // Reject\n      reject({ position, delay });\n    }\n  });\n}\n\nconst form = document.querySelector('.form');\nconst inputDelay = document.querySelector('input[name = \"delay\"');\nconst stepOfInterval = document.querySelector('input[name = \"step\"');\nconst amount = document.querySelector('input[name = \"amount\"');\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const positionValue = +amount.value;\n  const delayValue = +inputDelay.value;\n  const stepValue = +stepOfInterval.value;\n  for (let i = 1; i <= positionValue; i += 1) {\n    let position = i;\n    let delay = delayValue + stepValue * (i - 1);\n    setTimeout(() => {\n      createPromise(position, delay)\n        .then(({ position, delay }) =>\n          Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`)\n        )\n        .catch(({ position, delay }) =>\n          Notiflix.Notify.failure(\n            `‚ùå Rejected promise ${position} in ${delay}ms`\n          )\n        )\n        .finally(form.reset());\n    }, delay);\n  }\n});\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$stepOfInterval","$ce04d3a99e08e73b$var$amount","addEventListener","event","position1","i","delay1","delayValue","stepValue","setTimeout","position","delay","shouldResolve","Math","random","Promise","resolve","reject","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","finally","reset","preventDefault","positionValue","value","i1","_loop"],"version":3,"file":"03-promises.d2503dd6.js.map"}